{"ast":null,"code":"var _jsxFileName = \"F:\\\\react app\\\\moun\\\\src\\\\screens\\\\Ingredient\\\\IngredientScreen.js\";\nimport React, { useLayoutEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport { getIngredientUrl, getRecipesByIngredient, getCategoryName } from \"../../data/MockDataAPI\";\nexport default function IngredientScreen(props) {\n  var _route$params,\n      _route$params2,\n      _this = this;\n\n  var navigation = props.navigation,\n      route = props.route;\n  var ingredientId = (_route$params = route.params) == null ? void 0 : _route$params.ingredient;\n  var ingredientUrl = getIngredientUrl(ingredientId);\n  var ingredientName = (_route$params2 = route.params) == null ? void 0 : _route$params2.name;\n  console.log(ingredientName);\n  var base = \"https://mountainbea.com/images/\";\n  useLayoutEffect(function () {\n    var _route$params3;\n\n    navigation.setOptions({\n      title: (_route$params3 = route.params) == null ? void 0 : _route$params3.name\n    });\n  }, []);\n\n  var onPressRecipe = function onPressRecipe(item) {\n    navigation.navigate(\"Recipe\", {\n      item: item\n    });\n  };\n\n  var renderRecipes = function renderRecipes(_ref) {\n    var item = _ref.item;\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressRecipe(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, React.createElement(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressRecipe(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, React.createElement(Image, {\n      style: styles.photo,\n      source: {\n        uri: base + item.image\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }), React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, item.name), React.createElement(Text, {\n      style: styles.category,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, item.name))));\n  };\n\n  return React.createElement(ScrollView, {\n    style: styles.mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      borderBottomWidth: 0.4,\n      marginBottom: 10,\n      borderBottomColor: \"grey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.photoIngredient,\n    source: {\n      uri: base + item.image\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    style: styles.ingredientInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, item.name, \":\"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    vertical: true,\n    showsVerticalScrollIndicator: false,\n    numColumns: 2,\n    data: getRecipesByIngredient(ingredientId),\n    renderItem: renderRecipes,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["F:/react app/moun/src/screens/Ingredient/IngredientScreen.js"],"names":["React","useLayoutEffect","styles","getIngredientUrl","getRecipesByIngredient","getCategoryName","IngredientScreen","props","navigation","route","ingredientId","params","ingredient","ingredientUrl","ingredientName","name","console","log","base","setOptions","title","onPressRecipe","item","navigate","renderRecipes","container","photo","uri","image","category","mainContainer","borderBottomWidth","marginBottom","borderBottomColor","photoIngredient","ingredientInfo","id"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect } from \"react\";\nimport {\n  FlatList,\n  ScrollView,\n  Text,\n  View,\n  Image,\n  TouchableHighlight,\n} from \"react-native\";\nimport styles from \"./styles\";\nimport {\n  getIngredientUrl,\n  getRecipesByIngredient,\n  getCategoryName,\n} from \"../../data/MockDataAPI\";\n\nexport default function IngredientScreen(props) {\n  const { navigation, route } = props;\n\n  const ingredientId = route.params?.ingredient;\n  const ingredientUrl = getIngredientUrl(ingredientId);\n  const ingredientName = route.params?.name;\n  console.log(ingredientName);\n\n  const base = \"https://mountainbea.com/images/\";\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: route.params?.name,\n    });\n  }, []);\n\n  const onPressRecipe = (item) => {\n    navigation.navigate(\"Recipe\", { item });\n  };\n\n  const renderRecipes = ({ item }) => (\n    <TouchableHighlight\n      underlayColor=\"rgba(73,182,77,0.9)\"\n      onPress={() => onPressRecipe(item)}\n    >\n      <TouchableHighlight\n        underlayColor=\"rgba(73,182,77,0.9)\"\n        onPress={() => onPressRecipe(item)}\n      >\n        <View style={styles.container}>\n          <Image style={styles.photo} source={{ uri: base + item.image }} />\n          <Text style={styles.title}>{item.name}</Text>\n          <Text style={styles.category}>{item.name}</Text>\n        </View>\n      </TouchableHighlight>\n    </TouchableHighlight>\n  );\n\n  return (\n    <ScrollView style={styles.mainContainer}>\n      <View\n        style={{\n          borderBottomWidth: 0.4,\n          marginBottom: 10,\n          borderBottomColor: \"grey\",\n        }}\n      >\n        <Image\n          style={styles.photoIngredient}\n          source={{ uri: base + item.image }}\n        />\n      </View>\n      <Text style={styles.ingredientInfo}>{item.name}:</Text>\n      <View>\n        <FlatList\n          vertical\n          showsVerticalScrollIndicator={false}\n          numColumns={2}\n          data={getRecipesByIngredient(ingredientId)}\n          renderItem={renderRecipes}\n          keyExtractor={(item) => `${item.id}`}\n        />\n      </View>\n    </ScrollView>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}